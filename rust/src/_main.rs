use std::fs::File;
use std::io::Read;
use crate::day5::{d5_p1, input_generator};

mod day5;

fn main() {
    let mut buffer = String::new();
    <_ as Read>::read_to_string(&mut File::open("./input/2023/day5.txt").unwrap(), &mut buffer).unwrap();
    let input = input_generator(&buffer);

    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    let result = d5_p1(&input);
    println!("{}",result);
}